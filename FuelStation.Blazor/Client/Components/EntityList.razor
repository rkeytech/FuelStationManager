@typeparam TEntity

<div class="table-responsive-md">
    <table class="table table-hover">
        <thead>
            <tr>
                @TableHeader
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Items)
            {
                if (RowTemplate is not null)
                {
                    <tr>
                        @RowTemplate(item)
                        <td>
                            <button class="btn btn-warning" @onclick="() => EditClick(item)">Edit</button>
                            <button class="btn btn-danger" @onclick="() => DeleteClick(item)">Delete</button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code
{
    [Parameter]
    public RenderFragment? TableHeader { get; set; }
    [Parameter]
    public RenderFragment<TEntity>? RowTemplate { get; set; }
    [Parameter]
    public IReadOnlyList<TEntity> Items { get; set; }
    [Parameter]
    public EventCallback<TEntity> OnClickDelete { get; set; }
    [Parameter]
    public EventCallback<TEntity> OnClickEdit { get; set; }

    protected async Task DeleteClick(TEntity entity)
    {
        await OnClickDelete.InvokeAsync(entity);
    }

    protected async Task EditClick(TEntity entity)
    {
        await OnClickEdit.InvokeAsync(entity);
    }


}
