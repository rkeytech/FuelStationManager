@using FuelStation.Model
@inject IJSRuntime jsRuntime
@inject NavigationManager navManager

<div class="ps-3 navbar navbar-dark bg-primary">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Fuel Station</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        @if (role == (int)EmployeeTypeEnum.Manager ||
        role == (int)EmployeeTypeEnum.Cashier)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="customers">
                    <span class="oi oi-home" aria-hidden="true"></span>Customers
                </NavLink>
            </div>
        }
        @if (role == (int)EmployeeTypeEnum.Manager)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="employees">
                    <span class="oi oi-home" aria-hidden="true"></span>Employees
                </NavLink>
            </div>
        }
        @if (role == (int)EmployeeTypeEnum.Manager ||
        role == (int)EmployeeTypeEnum.Staff)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="items">
                    <span class="oi oi-home" aria-hidden="true"></span>Items
                </NavLink>
            </div>
        }
        @if (role == (int)EmployeeTypeEnum.Manager)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="monthlyledger">
                    <span class="oi oi-home" aria-hidden="true"></span>Monthly Ledger
                </NavLink>
            </div>
        }
        @if (isAuth)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" @onclick="LogOut">
                    <span class="oi oi-home" aria-hidden="true"></span>Logout
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private string? username { get; set; }
    private int role { get; set; } = -1;
    private bool isAuth = false;

    protected async override Task OnInitializedAsync()
    {
        isAuth = Convert.ToBoolean(await jsRuntime.InvokeAsync<string>("localStorage.getItem", "isAuth"));
        if (isAuth)
        {
            username = await jsRuntime.InvokeAsync<string>("localStorage.getItem", "username");
            role = Convert.ToInt32(await jsRuntime.InvokeAsync<string>("localStorage.getItem", "role"));
        }
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected async void LogOut()
    {
        await jsRuntime.InvokeAsync<string>("localStorage.setItem", "username", string.Empty);
        await jsRuntime.InvokeAsync<string>("localStorage.setItem", "role", string.Empty);
        await jsRuntime.InvokeAsync<string>("localStorage.setItem", "isAuth", false);
        navManager.NavigateTo("/login", true);
    }
}
