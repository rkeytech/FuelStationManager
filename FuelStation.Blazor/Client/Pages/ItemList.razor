@page "/items"
@inject HttpClient httpClient
@inject NavigationManager navManager
@using FuelStation.Blazor.Shared

<PageTitle>Fuel Station - Items</PageTitle>

<h2>Items</h2>

<div class=row>

    <button class="btn btn-primary w-25" @onclick="AddItem">Add Item</button>

</div>
@if (isLoading)
{
    <p> Loading...</p>
}
else
{
    <div class="table-responsive-md">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Code</th>
                    <th>Descirption</th>
                    <th>Cost</th>
                    <th>Price</th>
                    <th>Item Type</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in items)
                {
                    <tr>
                        <td>@item.Code</td>
                        <td>@item.Description</td>
                        <td>@item.Cost</td>
                        <td>@item.Price</td>
                        <td>@item.ItemType</td>
                        <td>
                            <button class="btn btn-warning" @onclick="() => EditItem(item)">Edit</button>
                            <button class="btn btn-danger" @onclick="() => DeleteItem(item)">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private List<ItemListViewModel> items = new();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadItemsFromServer();
        isLoading = false;
    }

    private async Task LoadItemsFromServer()
    {
        items = await httpClient.GetFromJsonAsync<List<ItemListViewModel>>("item");
    }

    protected void AddItem()
    {
        navManager.NavigateTo("/items/edit");
    }

    protected async Task DeleteItem(ItemListViewModel item)
    {
        var response = await httpClient.DeleteAsync($"item/{item.ID}");
        response.EnsureSuccessStatusCode();
        await LoadItemsFromServer();
    }

    protected void EditItem(ItemListViewModel item)
    {
        navManager.NavigateTo($"/items/edit/{item.ID}");
    }
}
